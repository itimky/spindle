// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	context "context"

	answerprocessor "github.com/itimky/spindle/pkg/domain/answer-processor"

	domain "github.com/itimky/spindle/pkg/domain"

	mock "github.com/stretchr/testify/mock"
)

// MockweightMatrixStore is an autogenerated mock type for the weightMatrixStore type
type MockweightMatrixStore struct {
	mock.Mock
}

type MockweightMatrixStore_Expecter struct {
	mock *mock.Mock
}

func (_m *MockweightMatrixStore) EXPECT() *MockweightMatrixStore_Expecter {
	return &MockweightMatrixStore_Expecter{mock: &_m.Mock}
}

// Bootstrap provides a mock function with given fields: ctx, matrices
func (_m *MockweightMatrixStore) Bootstrap(ctx context.Context, matrices map[domain.QuestionID]answerprocessor.WeightMatrix) error {
	ret := _m.Called(ctx, matrices)

	if len(ret) == 0 {
		panic("no return value specified for Bootstrap")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, map[domain.QuestionID]answerprocessor.WeightMatrix) error); ok {
		r0 = rf(ctx, matrices)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockweightMatrixStore_Bootstrap_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Bootstrap'
type MockweightMatrixStore_Bootstrap_Call struct {
	*mock.Call
}

// Bootstrap is a helper method to define mock.On call
//   - ctx context.Context
//   - matrices map[domain.QuestionID]answerprocessor.WeightMatrix
func (_e *MockweightMatrixStore_Expecter) Bootstrap(ctx interface{}, matrices interface{}) *MockweightMatrixStore_Bootstrap_Call {
	return &MockweightMatrixStore_Bootstrap_Call{Call: _e.mock.On("Bootstrap", ctx, matrices)}
}

func (_c *MockweightMatrixStore_Bootstrap_Call) Run(run func(ctx context.Context, matrices map[domain.QuestionID]answerprocessor.WeightMatrix)) *MockweightMatrixStore_Bootstrap_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(map[domain.QuestionID]answerprocessor.WeightMatrix))
	})
	return _c
}

func (_c *MockweightMatrixStore_Bootstrap_Call) Return(_a0 error) *MockweightMatrixStore_Bootstrap_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockweightMatrixStore_Bootstrap_Call) RunAndReturn(run func(context.Context, map[domain.QuestionID]answerprocessor.WeightMatrix) error) *MockweightMatrixStore_Bootstrap_Call {
	_c.Call.Return(run)
	return _c
}

// Set provides a mock function with given fields: ctx, questionID, matrix
func (_m *MockweightMatrixStore) Set(ctx context.Context, questionID domain.QuestionID, matrix answerprocessor.WeightMatrix) error {
	ret := _m.Called(ctx, questionID, matrix)

	if len(ret) == 0 {
		panic("no return value specified for Set")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.QuestionID, answerprocessor.WeightMatrix) error); ok {
		r0 = rf(ctx, questionID, matrix)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockweightMatrixStore_Set_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Set'
type MockweightMatrixStore_Set_Call struct {
	*mock.Call
}

// Set is a helper method to define mock.On call
//   - ctx context.Context
//   - questionID domain.QuestionID
//   - matrix answerprocessor.WeightMatrix
func (_e *MockweightMatrixStore_Expecter) Set(ctx interface{}, questionID interface{}, matrix interface{}) *MockweightMatrixStore_Set_Call {
	return &MockweightMatrixStore_Set_Call{Call: _e.mock.On("Set", ctx, questionID, matrix)}
}

func (_c *MockweightMatrixStore_Set_Call) Run(run func(ctx context.Context, questionID domain.QuestionID, matrix answerprocessor.WeightMatrix)) *MockweightMatrixStore_Set_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(domain.QuestionID), args[2].(answerprocessor.WeightMatrix))
	})
	return _c
}

func (_c *MockweightMatrixStore_Set_Call) Return(_a0 error) *MockweightMatrixStore_Set_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockweightMatrixStore_Set_Call) RunAndReturn(run func(context.Context, domain.QuestionID, answerprocessor.WeightMatrix) error) *MockweightMatrixStore_Set_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockweightMatrixStore creates a new instance of MockweightMatrixStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockweightMatrixStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockweightMatrixStore {
	mock := &MockweightMatrixStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
