# https://taskfile.dev/usage/

version: '3'

silent: true

vars:
  GOLANGCI_LINT_VERSION: v1.54.2
  MOCKERY_VERSION: v2.42.0
  GOLANG_TEST_IMAGE: golang:1.21.6-alpine3.19

tasks:
  gen:
    desc: Generate code
    deps:
      - gen:mocks

  gen:mocks:
    desc: Generate mocks
    cmds:
      - docker run --rm -v {{.PWD}}:/src -w /src vektra/mockery:{{.MOCKERY_VERSION}}

  fmt:
    desc: Format code
    cmds:
      - docker run --rm -v {{.PWD}}:/src -v ./tmp/golangci-lint/{{.GOLANGCI_LINT_VERSION}}:/root/.cache -w /src golangci/golangci-lint:{{.GOLANGCI_LINT_VERSION}} golangci-lint run --no-config --disable-all --enable gci --fix

  lint:
    desc: Lint code
    cmds:
      - docker run --rm -v {{.PWD}}:/src -v ./tmp/golangci-lint/{{.GOLANGCI_LINT_VERSION}}:/root/.cache -w /src golangci/golangci-lint:{{.GOLANGCI_LINT_VERSION}} golangci-lint run

  test:
    desc: Test code
    cmds:
      - >
        docker run --rm
        -v {{.PWD}}:/app
        -v {{.HOME}}/.cache/go-build:/root/.cache/go-build
        -v {{.HOME}}/go/pkg/mod:/go/pkg/mod
        -w /app
        {{.GOLANG_TEST_IMAGE}}
        go test $(go list ./... |
          grep -v /cmd/ |
          grep -v /pkg/contract/ |
          grep -v /pkg/domain$ |
          grep -v /pkg/sys$ |
          grep -v /pkg/sys/log$ |
          grep -v /test/
        ) -covermode=atomic
        -coverprofile /tmp/cov.out
